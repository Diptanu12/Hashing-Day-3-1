Group Anagrams
Given an array of words, print all anagrams together. For example, if the given array is {“cat”, “dog”, “tac”, “god”, “act”}, then output may be “cat tac act dog god”.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Print the anagrams of the words in the order it appeared in the array.

For example: cat appears first, so print cat first and print the remaining anagrams in the order of appearance in the array. So cat -> tac -> act. Then print dog and the anagrams of dog ie. god.

Print the anagram groups in lexicographical order.

Input Format
Input consists of 2 lines.

1st line contains the number of elements followed by n Strings.

Output Format
Print the anagrams together in the same line.

Example1
Input

5
cat dog tac god act
Output

cat tac act dog god
Explanation

cat, tac and act are anagrams of each other.

dog and god are anagrams of each other.

Example 2
Input

6
eat tea tan ate nat bat
Output

bat eat tea ate tan nat
Explanation

bat exists singularly.

eat, tea and ate are anagrams of each other.

tan and nat are anagrams of each other.

Constraints
1 <= strs.length <= 200

0 <= strs[i].length <= 100

strs[i] consists of lowercase English letters.

Topics
Sorting
Hashing
Strings


import java.util.*;

public class Main {
    static String encode(String str) {
        int[] farr = new int[26];
        for (char ch : str.toCharArray()) {
            int pos = (int) (ch - 'a');
            farr[pos]++;
        }

        StringBuilder sb = new StringBuilder("");
        for (int i = 0; i < 26; i++) {
            if (farr[i] > 0) {
                sb.append((char) (i + 'a'));
                sb.append(farr[i]);
            }
        }

        return sb.toString();
    }

    static void printAnagramsTogether(String wordArr[], int size) {
        HashMap<String, ArrayList<String>> map = new HashMap<>();

        ArrayList<String> firstOfEachGrp = new ArrayList<>();

        for (String word : wordArr) {
            String e = encode(word);

            if (map.containsKey(e) == false) {
                // first of this grp
                ArrayList<String> grp = new ArrayList<>();
                firstOfEachGrp.add(word);
                grp.add(word);
                map.put(e, grp);
            } else {
                ArrayList<String> grp = map.get(e);
                grp.add(word);
                map.put(e, grp);
            }
        }

        Collections.sort(firstOfEachGrp);

        for (String grpLeader : firstOfEachGrp) {
            String e = encode(grpLeader);

            for (String ele : map.get(e)) {
                System.out.print(ele + " ");
            }
        }
    }

    // Driver program to test above functions
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] wordArr = new String[n];
        for (int i = 0; i < n; i++)
            wordArr[i] = sc.next();
        sc.close();
        printAnagramsTogether(wordArr, n);
    }
}
